generator client {
  provider = "prisma-client-js"
  binaryTargets = ["debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String       @id @default(uuid())
  created      DateTime     @default(now())
  auth_token   String       @unique @default(uuid())
  updated      DateTime     @updatedAt
  email        String?      @unique
  username     String?      @unique
  password     String?
  subscription Subscription @default(FREE)
  salt         String?
  ip_servers   IPServer[]
  premium_expiry DateTime?
  plus_expiry DateTime?
}

model Key {
  id      String   @id @default(uuid())
  subscription Subscription @default(FREE)
  key     String   @default(uuid())
  created  DateTime @default(now())
}

model IPServer {
  id      String   @id @default(uuid())
  ownerId String
  created DateTime @default(now())
  updated DateTime @updatedAt
  nickname String?
  ip_address String?
  owner   User     @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  status String    @default("PENDING")
}

model EmailVerification {
  id       String  @id @default(uuid())
  username String?
  email    String?
  password String?
  salt     String?
  ip       String?
  code     String?
}

model ForgotPassword {
  id    String  @id @default(uuid())
  email String?
  ip    String?
  code  String?
}

enum Subscription {
  FREE
  PLUS
  PREMIUM
}